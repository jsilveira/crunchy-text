// import _ from "../../lib/lodash.js"
import InputPreprocessor from "./InputPreprocessor";

const words = [
  "algún",
  "alguna",
  "algunas",
  "alguno",
  "algunos",
  "ambos",
  "ampleamos",
  "ante",
  "antes",
  "aquel",
  "aquellas",
  "aquellos",
  "aqui",
  "arriba",
  "atras",
  "bajo",
  "bastante",
  "bien",
  "cada",
  "cierta",
  "ciertas",
  "cierto",
  "ciertos",
  "como",
  "con",
  "conseguimos",
  "conseguir",
  "consigo",
  "consigue",
  "consiguen",
  "consigues",
  "cual",
  "cuando",
  "dentro",
  "desde",
  "donde",
  "dos",
  "de",
  "el",
  "ellas",
  "ellos",
  "empleais",
  "emplean",
  "emplear",
  "empleas",
  "empleo",
  "en",
  "encima",
  "entonces",
  "entre",
  "era",
  "eramos",
  "eran",
  "eras",
  "eres",
  "es",
  "esta",
  "estaba",
  "estado",
  "estais",
  "estamos",
  "estan",
  "estoy",
  "fin",
  "fue",
  "fueron",
  "fui",
  "fuimos",
  "gueno",
  "ha",
  "hace",
  "haceis",
  "hacemos",
  "hacen",
  "hacer",
  "haces",
  "hago",
  "incluso",
  "intenta",
  "intentais",
  "intentamos",
  "intentan",
  "intentar",
  "intentas",
  "intento",
  "ir",
  "la",
  "largo",
  "las",
  "lo",
  "los",
  "mientras",
  "mio",
  "modo",
  "muchos",
  "muy",
  "nos",
  "nosotros",
  "otro",
  "para",
  "pero",
  "podeis",
  "podemos",
  "poder",
  "podria",
  "podriais",
  "podriamos",
  "podrian",
  "podrias",
  "por",
  "por qué",
  "porque",
  "primero",
  "puede",
  "pueden",
  "puedo",
  "quien",
  "sabe",
  "sabeis",
  "sabemos",
  "saben",
  "saber",
  "sabes",
  "ser",
  "si",
  "siendo",
  "sin",
  "sobre",
  "sois",
  "solamente",
  "solo",
  "somos",
  "soy",
  "su",
  "sus",
  "también",
  "teneis",
  "tenemos",
  "tener",
  "tengo",
  "tiempo",
  "tiene",
  "tienen",
  "todo",
  "trabaja",
  "trabajais",
  "trabajamos",
  "trabajan",
  "trabajar",
  "trabajas",
  "trabajo",
  "tras",
  "tuyo",
  "ultimo",
  "un",
  "una",
  "unas",
  "uno",
  "unos",
  "usa",
  "usais",
  "usamos",
  "usan",
  "usar",
  "usas",
  "uso",
  "va",
  "vais",
  "valor",
  "vamos",
  "van",
  "vaya",
  "verdad",
  "verdadera",
  "verdadero",
  "vosotras",
  "vosotros",
  "voy",
  "yo"
];

const wordIndex = {};
words.forEach(w => wordIndex[w] = true);

export default class RemoveStopWords extends InputPreprocessor {
  constructor() {
    super("Remove stopwords")
  }
  syncProcess(input) {
    const tokens = input.split(' ').filter(w => !wordIndex[w]);
    return tokens.join(' ');
  }
}